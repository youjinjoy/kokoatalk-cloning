/* Header part */
.welcome-header{
    margin: 75px 0;
    text-align: center; /* display: flex;를 쓸 수도 있지만 h1와 같은 텍스트를 다루는 것이기 때문에 text-align: center;를 쓸 수 있다.*/
    font-weight: 600;

    /* header, h1, p가 전부 가운데 오게끔 하는 작업 */
    display: flex;
    flex-direction: column;
    align-items: center;
}
.welcome-header__title{
    margin-bottom: 25px;
    font-size: 30px;
}
.welcome-header__text{
    width: 320px;
    opacity: 0.5;
    /* 해당 글씨 색깔 구현하는 법: (1)회색 사용 (2)opacity를 주기*/
}

/* Log-in part. 연습용으로 BEM 방식이 아닌 id를 사용함.*/
#login-form{
    display: flex;
    flex-direction: column;
    margin: 0 25px;
}
#login-form input{
    padding: 20px 0;
    font-size: 20px;

    border: none;

    margin-bottom:35px;
}

/* Log In과 Sign Up 사이의 간격 조정*/
#login-form input:nth-child(3){
    margin-bottom:10px;
}
/* Sign Up과 Find KoKoa Account or Passoword 사이의 간격 조정*/
#login-form input:nth-child(4){
    margin-bottom:20px;
}

#login-form input::placeholder{
    color: rgba(0,0,0,0.4);
}
/* input에 입력할 때 일관성 있게 주고 싶은 active 등의 효과 있을 땐 어떻게? -> reset.css에 input:focus 추가 */

/* text, password 뿐만 아니라 버튼에 해당하는 submit도 input에 속하기 때문에 input에 작성한 요소들이 적용되는 문제가 있다.
text, password일 때만 효과가 적용되길 원할 때, #login-form input{}에 들어있는 요소를 잘라내서

not을 사용한 아래의 {} 안에 넣으면 된다.
아래를 보면 input type이 submit이 아닐 때에만 {}안에 있는 요소들이 적용된다는 뜻이다.*/
#login-form input:not([type="submit"]){
    border-bottom: 1px solid rgba(0,0,0,0.3);
}

/* 반대로 아래를 보면 input type이 submit이 일 때에만 {}안에 있는 요소들이 적용된다는 뜻이다.*/
#login-form input[type="submit"]{
    font-size: 18px;
    background-color: var(--yellow);    /*varaibles.css 참고*/
    cursor: pointer; /* 커서를 바꿔준다. 그 외 not-allowed, progress 등 많은 value가 있다. */
    border-radius: 5px;
}

/* a part */
#login-form a{
    text-align: center;
    text-decoration: none;
    color: inherit; /*부모로부터 상속*/
    font-size: 15px;
}